Para evaluar la calidad del microservicio desarrollado, se han identificado los siguientes atributos clave: mantenibilidad, portabilidad, disponibilidad, escalabilidad y seguridad. La elección de estos atributos responde directamente a las características técnicas implementadas en los puntos anteriores del desarrollo.

La mantenibilidad es fundamental dado que el microservicio ha sido construido utilizando una arquitectura por capas en Java con Spring Boot, lo cual permite una clara separación de responsabilidades entre el controlador, los servicios y los modelos de datos. Además, la integración de Swagger para la documentación de los métodos expone claramente la funcionalidad de cada endpoint, facilitando el trabajo de futuros desarrolladores que necesiten modificar, extender o depurar el sistema.

La portabilidad se ha considerado como un atributo importante debido al uso de Docker para contenerizar el microservicio y docker-compose para su despliegue conjunto con una base de datos MySQL. Esto permite que el microservicio pueda ejecutarse en distintos entornos sin necesidad de configurar dependencias de forma manual, garantizando su funcionamiento en plataformas heterogéneas.

La disponibilidad también se ve favorecida gracias a la contenerización, ya que el microservicio puede ser levantado y reiniciado rápidamente en caso de fallo, asegurando que el servicio esté operativo la mayor parte del tiempo. De forma similar, la escalabilidad se vuelve viable al tratarse de un microservicio desacoplado que puede replicarse horizontalmente para responder a mayores volúmenes de solicitudes.

Finalmente, la seguridad se aborda inicialmente mediante el uso de variables de entorno para el manejo de credenciales, evitando exponer datos sensibles directamente en el código fuente. Aunque este aspecto puede ser ampliado en futuras iteraciones con autenticación y autorización, ya se sientan las bases para prácticas seguras.

De todos los atributos mencionados, la mantenibilidad es considerada el más importante en esta etapa del desarrollo. Esto se debe a que el microservicio forma parte de una solución en constante evolución, en la que se requerirá con frecuencia agregar nuevas funcionalidades, corregir errores o adaptarse a cambios en el negocio. Una alta mantenibilidad garantiza que estas modificaciones puedan realizarse de manera eficiente, reduciendo tiempos de desarrollo y disminuyendo el riesgo de introducir errores.